version: '3.9'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.9.3
  env_file:
    - .env
  environment:
    &airflow-environment
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow_db:5432/airflow
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    _PIP_ADDITIONAL_REQUIREMENTS: "pandas psycopg2-binary sqlalchemy python-dotenv"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./source_data:/opt/airflow/source_data
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"
  depends_on:
    source_db:
      condition: service_healthy
    dw_postgres:
      condition: service_healthy
    airflow_db:
      condition: service_healthy

services:
  source_db:
    image: postgres:16
    environment:
      POSTGRES_DB: banvic
      POSTGRES_USER: data_engineer
      POSTGRES_PASSWORD: v3rysecur&pas5w0rd
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U data_engineer -d banvic"]
      interval: 5s
      retries: 10
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./source_db/banvic.sql:/docker-entrypoint-initdb.d/banvic.sql

  dw_postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: dw_user
      POSTGRES_PASSWORD: dw_pass
      POSTGRES_DB: dw_db
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dw_user -d dw_db"]
      interval: 5s
      retries: 10
    volumes:
      - dw_db_data:/var/lib/postgresql/data

  airflow_scheduler:
    <<: *airflow-common
    command: scheduler

  airflow_webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow_triggerer:
    <<: *airflow-common
    command: triggerer

  airflow_db:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      retries: 5

volumes:
  dw_db_data:
  airflow_db_data:
